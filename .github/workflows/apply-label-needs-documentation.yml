name: Apply 'documentation-needed' Label to Pull Request

on:
  issues:
    types: [labeled, unlabeled]

jobs:
  apply_label:
    runs-on: ubuntu-latest
    steps:
      # Set up Python 3.8 and install PyGithub
      - name: Set up Python and Install Dependencies
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install PyGithub
        run: pip install PyGithub

      # Apply the 'documentation-needed' label to the pull request(s) if the corresponding issue has the same label
      - name: Apply 'documentation-needed' Label to Pull Request(s)
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.workflow_apply_label }}
        run: |
          python - <<EOF
          import os
          import json
          from github import Github
          import requests

          print("A label has changed on an issue - check if the issue needs-documentation")

          # Create a PyGithub object using the personal access token
          g = Github(os.environ["PERSONAL_ACCESS_TOKEN"])

          # Get the repository object for the current repository
          repo = g.get_repo(os.environ["GITHUB_REPOSITORY"])

          issue_number = os.environ["ISSUE_NUMBER"]
          print("issue number: " + issue_number)

          issue = repo.get_issue(int(issue_number))
          print("issue: " + str(issue))

          print("test get pulls")
          pull_requests = repo.get_pulls(state="open", sort="created", base=issue_number)
          print(pull_requests)

          # Get the issue object for the merged pull request
          issue_number = os.environ["ISSUE_NUMBER"]
          issue = repo.get_issue(int(issue_number))

          # Check if the issue has the 'documentation-needed' label
          if "documentation-needed" in [label.name for label in issue.labels]:

              # Get the repository object for the current repository
              repo = g.get_repo(os.environ["GITHUB_REPOSITORY"])

              # Get the pull requests associated with the issue
              pull_requests = repo.get_pulls(state="open", sort="created", base=issue_number)

              # Apply the 'documentation-needed' label to each pull request
              for pull in pull_requests:
                  pull.add_to_labels("documentation-needed")
                  print(f"Applied 'documentation-needed' label to pull request #{pull.number}")
          else:
              print(f"Issue #{issue.number} does not have 'documentation-needed' label")
