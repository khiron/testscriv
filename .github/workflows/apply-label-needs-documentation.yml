name: Apply 'needs-documentation' Label to Pull Request

on:
  issues:
    types: [labeled, unlabeled]

jobs:
  apply_label:
    runs-on: ubuntu-latest
    steps:
      # Set up Python 3.8 and install PyGithub
      - name: Set up Python and Install Dependencies
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install PyGithub
        run: pip install PyGithub

      # Apply the 'needs-documentation' label to the pull request if the corresponding issue has the same label
      - name: Apply 'needs-documentation' Label to Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # This step applies the 'needs-documentation' label to a pull request if the corresponding issue has the same label.
        # This helps ensure that documentation is created for changes to the code.
        run: |
          python - <<EOF
          import os
          import json
          from github import Github

          print("responding to a change in an issue label")
          # Create a PyGithub object using the GitHub access token
          g = Github(os.environ["GITHUB_TOKEN"])

          # Get the repository object for the current repository
          repo = g.get_repo(os.environ["GITHUB_REPOSITORY"])

          # Load the event payload from the GITHUB_EVENT_PATH environment variable
          event_path = os.environ["GITHUB_EVENT_PATH"]
          event = {}
          if os.path.exists(event_path):
              with open(event_path, "r") as f:
                  event = json.load(f)

          # Check if the event corresponds to an issue
          if "issue" in event:
              print("event corresponds to an issue")

              # Get the issue object for the current issue
              issue = repo.get_issue(event["issue"]["number"])
              print(f"issue number: {issue.number}")

              # Check if the issue has the 'documentation-needed' label
              if "documentation-needed" in [label.name for label in issue.labels]:
                  print("issue has the 'documentation-needed' label")

                  # Get the pull requests associated with the issue
                  pull_requests = issue.get_pulls()
                  print(f"pull requests associated with issue: {[pull.number for pull in pull_requests]}")

                  # Apply the 'documentation-needed' label to each pull request
                  for pull in pull_requests:
                      pull.add_to_labels("documentation-needed")
                      print(f"Applied 'documentation-needed' label to pull request #{pull.number} (issue #{issue.number}).")
          EOF